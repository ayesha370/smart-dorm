{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\final\\\\src\\\\Screens\\\\NotificationComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './NotificationComponent.css'; // Make sure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationComponent = ({\n  userEmail\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3001/api/auth/notifications/${userEmail}`).then(res => res.json()).then(data => setNotifications(data)).catch(err => console.error(err));\n  }, [userEmail]);\n  const markAsRead = id => {\n    fetch(`http://localhost:3001/api/auth/notifications/read/${id}`, {\n      method: 'PATCH'\n    }).then(() => setNotifications(notifications.map(notif => notif._id === id ? {\n      ...notif,\n      readStatus: true\n    } : notif))).catch(err => console.error(err));\n  };\n  const deleteNotification = id => {\n    fetch(`http://localhost:3001/api/auth/notifications/${id}`, {\n      method: 'DELETE'\n    }).then(() => setNotifications(notifications.filter(notif => notif._id !== id))).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"notification-list\",\n      children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `notification-item ${!notif.readStatus ? 'unread' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-text\",\n          children: notif.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => markAsRead(notif._id),\n            className: \"notification-button\",\n            children: \"Mark as Read\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteNotification(notif._id),\n            className: \"notification-button delete\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, notif._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(NotificationComponent, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = NotificationComponent;\nexport default NotificationComponent;\nvar _c;\n$RefreshReg$(_c, \"NotificationComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","NotificationComponent","userEmail","_s","notifications","setNotifications","fetch","then","res","json","data","catch","err","console","error","markAsRead","id","method","map","notif","_id","readStatus","deleteNotification","filter","className","children","message","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/final/src/Screens/NotificationComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './NotificationComponent.css'; // Make sure the path is correct\n\nconst NotificationComponent = ({ userEmail }) => {\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://localhost:3001/api/auth/notifications/${userEmail}`)\n            .then(res => res.json())\n            .then(data => setNotifications(data))\n            .catch(err => console.error(err));\n    }, [userEmail]);\n\n    const markAsRead = (id) => {\n        fetch(`http://localhost:3001/api/auth/notifications/read/${id}`, { method: 'PATCH' })\n            .then(() => setNotifications(notifications.map(notif => notif._id === id ? { ...notif, readStatus: true } : notif)))\n            .catch(err => console.error(err));\n    };\n\n    const deleteNotification = (id) => {\n        fetch(`http://localhost:3001/api/auth/notifications/${id}`, { method: 'DELETE' })\n            .then(() => setNotifications(notifications.filter(notif => notif._id !== id)))\n            .catch(err => console.error(err));\n    };\n\n    return (\n        <div className=\"notification-container\">\n            <ul className=\"notification-list\">\n                {notifications.map(notif => (\n                    <li key={notif._id} className={`notification-item ${!notif.readStatus ? 'unread' : ''}`}>\n                        <div className=\"notification-text\">{notif.message}</div>\n                        <div>\n                            <button onClick={() => markAsRead(notif._id)} className=\"notification-button\">\n                                Mark as Read\n                            </button>\n                            <button onClick={() => deleteNotification(notif._id)} className=\"notification-button delete\">\n                                Delete\n                            </button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default NotificationComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZS,KAAK,CAAE,gDAA+CJ,SAAU,EAAC,CAAC,CAC7DK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,gBAAgB,CAACK,IAAI,CAAC,CAAC,CACpCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,MAAMa,UAAU,GAAIC,EAAE,IAAK;IACvBV,KAAK,CAAE,qDAAoDU,EAAG,EAAC,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAC,CAAC,CAChFV,IAAI,CAAC,MAAMF,gBAAgB,CAACD,aAAa,CAACc,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,KAAKJ,EAAE,GAAG;MAAE,GAAGG,KAAK;MAAEE,UAAU,EAAE;IAAK,CAAC,GAAGF,KAAK,CAAC,CAAC,CAAC,CACnHR,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,MAAMU,kBAAkB,GAAIN,EAAE,IAAK;IAC/BV,KAAK,CAAE,gDAA+CU,EAAG,EAAC,EAAE;MAAEC,MAAM,EAAE;IAAS,CAAC,CAAC,CAC5EV,IAAI,CAAC,MAAMF,gBAAgB,CAACD,aAAa,CAACmB,MAAM,CAACJ,KAAK,IAAIA,KAAK,CAACC,GAAG,KAAKJ,EAAE,CAAC,CAAC,CAAC,CAC7EL,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,oBACIZ,OAAA;IAAKwB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACnCzB,OAAA;MAAIwB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC5BrB,aAAa,CAACc,GAAG,CAACC,KAAK,iBACpBnB,OAAA;QAAoBwB,SAAS,EAAG,qBAAoB,CAACL,KAAK,CAACE,UAAU,GAAG,QAAQ,GAAG,EAAG,EAAE;QAAAI,QAAA,gBACpFzB,OAAA;UAAKwB,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAEN,KAAK,CAACO;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxD9B,OAAA;UAAAyB,QAAA,gBACIzB,OAAA;YAAQ+B,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACI,KAAK,CAACC,GAAG,CAAE;YAACI,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAC;UAE9E;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT9B,OAAA;YAAQ+B,OAAO,EAAEA,CAAA,KAAMT,kBAAkB,CAACH,KAAK,CAACC,GAAG,CAAE;YAACI,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAC;UAE7F;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA,GATDX,KAAK,CAACC,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAzCIF,qBAAqB;AAAA+B,EAAA,GAArB/B,qBAAqB;AA2C3B,eAAeA,qBAAqB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}