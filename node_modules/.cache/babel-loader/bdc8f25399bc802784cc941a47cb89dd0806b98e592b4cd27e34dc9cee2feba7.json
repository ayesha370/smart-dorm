{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\final\\\\src\\\\Screens\\\\RoomAllocationAdmin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SidebarAdmin from '../Components/SidebarAdmin';\nimport RoomAllocationAdminComponent from '../Components/RoomAllocationAdminComponent';\nimport RoomAllocationForm from '../Components/RoomAllocationForm';\nimport Header from '../Components/HeaderAdmin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomAllocationAdmin = () => {\n  _s();\n  const [allocations, setAllocations] = useState([]);\n  const fetchAllocations = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/roomallocation/all'); // Make sure this endpoint is correct\n      const data = await response.json();\n      if (data && data.allocations) {\n        setAllocations(data.allocations);\n        console.log('Fetched Allocations:', data.allocations);\n      }\n    } catch (error) {\n      console.error('Failed to fetch allocations:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAllocations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SidebarAdmin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Room Allocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomAllocationForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomAllocationAdminComponent, {\n        allocationsProp: allocations,\n        fetchAllocations: fetchAllocations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomAllocationAdmin, \"8PcftioP40+saSy2NcOKXWxkCIM=\");\n_c = RoomAllocationAdmin;\nexport default RoomAllocationAdmin;\nvar _c;\n$RefreshReg$(_c, \"RoomAllocationAdmin\");","map":{"version":3,"names":["React","useEffect","useState","SidebarAdmin","RoomAllocationAdminComponent","RoomAllocationForm","Header","jsxDEV","_jsxDEV","RoomAllocationAdmin","_s","allocations","setAllocations","fetchAllocations","response","fetch","data","json","console","log","error","style","display","width","children","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflow","title","allocationsProp","_c","$RefreshReg$"],"sources":["E:/FYP/final/src/Screens/RoomAllocationAdmin.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport SidebarAdmin from '../Components/SidebarAdmin'\nimport RoomAllocationAdminComponent from '../Components/RoomAllocationAdminComponent'\nimport RoomAllocationForm from '../Components/RoomAllocationForm'\nimport Header from '../Components/HeaderAdmin'\n\nconst RoomAllocationAdmin = () => {\n  const [allocations, setAllocations] = useState([])\n\n  const fetchAllocations = async () => {\n    try {\n      const response = await fetch(\n        'http://localhost:3001/api/auth/roomallocation/all'\n      ) // Make sure this endpoint is correct\n      const data = await response.json()\n      if (data && data.allocations) {\n        setAllocations(data.allocations)\n        console.log('Fetched Allocations:', data.allocations)\n      }\n    } catch (error) {\n      console.error('Failed to fetch allocations:', error)\n    }\n  }\n  useEffect(() => {\n    fetchAllocations()\n  }, [])\n\n \nreturn (\n    <div style={{ display: 'flex', width: '100%' }}> \n      <SidebarAdmin />\n      <div style={{ flex: 1, overflow: 'hidden' }}> \n        <Header title='Room Allocation' />\n        <RoomAllocationForm />\n        <RoomAllocationAdminComponent\n          allocationsProp={allocations}\n          fetchAllocations={fetchAllocations}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default RoomAllocationAdmin\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,4BAA4B,MAAM,4CAA4C;AACrF,OAAOC,kBAAkB,MAAM,kCAAkC;AACjE,OAAOC,MAAM,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mDACF,CAAC,EAAC;MACF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,IAAIA,IAAI,CAACL,WAAW,EAAE;QAC5BC,cAAc,CAACI,IAAI,CAACL,WAAW,CAAC;QAChCO,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,IAAI,CAACL,WAAW,CAAC;MACvD;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EACDnB,SAAS,CAAC,MAAM;IACdY,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAGR,oBACIL,OAAA;IAAKa,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC7ChB,OAAA,CAACL,YAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBpB,OAAA;MAAKa,KAAK,EAAE;QAAEQ,IAAI,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAN,QAAA,gBAC1ChB,OAAA,CAACF,MAAM;QAACyB,KAAK,EAAC;MAAiB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCpB,OAAA,CAACH,kBAAkB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtBpB,OAAA,CAACJ,4BAA4B;QAC3B4B,eAAe,EAAErB,WAAY;QAC7BE,gBAAgB,EAAEA;MAAiB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAnCKD,mBAAmB;AAAAwB,EAAA,GAAnBxB,mBAAmB;AAqCzB,eAAeA,mBAAmB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}