{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\final\\\\src\\\\Components\\\\ProfileAdminDisplayComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { PersonCircle } from 'react-bootstrap-icons';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\nimport './ProfileAdminDisplayComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileAdminDisplayComponent = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [userDetails, setUserDetails] = useState({\n    fullName: '',\n    email: '',\n    role: '',\n    dateOfBirth: ''\n  });\n  useEffect(() => {\n    if (currentUser && currentUser.email) {\n      fetchUserProfile();\n    }\n  }, [currentUser]);\n  const fetchUserProfile = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/auth/user/profile/${currentUser.email}`, {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const formattedDateOfBirth = data.dateOfBirth ? new Date(data.dateOfBirth).toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        }) : 'No Date of Birth Provided';\n        setUserDetails({\n          fullName: currentUser.fullName,\n          email: currentUser.email,\n          role: currentUser.role,\n          dateOfBirth: formattedDateOfBirth\n        });\n      } else {\n        console.error('Failed to fetch user details.');\n      }\n    } catch (error) {\n      console.error('Error fetching user details:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-profile-card-container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"admin-profile-card\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"admin-profile-card-body\",\n        children: [/*#__PURE__*/_jsxDEV(PersonCircle, {\n          size: 90,\n          className: \"admin-profile-icon mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"admin-profile-card-title\",\n          children: \"Profile Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-profile-details-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-profile-details-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"admin-break\",\n              children: renderProfileDetail('Name', userDetails.fullName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"admin-break\",\n              children: renderProfileDetail('Email', userDetails.email)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"admin-break\",\n              children: renderProfileDetail('Role', userDetails.role)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"admin-break\",\n              children: renderProfileDetail('Date of Birth', userDetails.dateOfBirth)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-profile-details-right\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/adminsettings\",\n              className: \"admin-profile-edit-link\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"admin-profile-edit-button\",\n                children: \"Edit Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n  function renderProfileDetail(label, value) {\n    return /*#__PURE__*/_jsxDEV(Card.Text, {\n      className: \"admin-profile-card-text\",\n      children: [label, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"admin-profile-card-info\",\n        children: value || 'Not provided'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this);\n  }\n};\n_s(ProfileAdminDisplayComponent, \"DNQCAxpIPyyhXg0pbPohxHqYepw=\", false, function () {\n  return [useAuth];\n});\n_c = ProfileAdminDisplayComponent;\nexport default ProfileAdminDisplayComponent;\nvar _c;\n$RefreshReg$(_c, \"ProfileAdminDisplayComponent\");","map":{"version":3,"names":["React","useEffect","useState","Card","Button","PersonCircle","useAuth","Link","jsxDEV","_jsxDEV","ProfileAdminDisplayComponent","_s","currentUser","userDetails","setUserDetails","fullName","email","role","dateOfBirth","fetchUserProfile","response","fetch","method","headers","Authorization","localStorage","getItem","ok","data","json","formattedDateOfBirth","Date","toLocaleDateString","year","month","day","console","error","className","children","Body","size","fileName","_jsxFileName","lineNumber","columnNumber","Title","renderProfileDetail","to","label","value","Text","_c","$RefreshReg$"],"sources":["E:/FYP/final/src/Components/ProfileAdminDisplayComponent.jsx"],"sourcesContent":["  import React, { useEffect, useState } from 'react';\n  import { Card, Button } from 'react-bootstrap';\n  import { PersonCircle } from 'react-bootstrap-icons';\n  import { useAuth } from '../contexts/AuthContext';\n  import { Link } from 'react-router-dom';\n  import './ProfileAdminDisplayComponent.css';\n\n  const ProfileAdminDisplayComponent = () => {\n    const { currentUser } = useAuth();\n    const [userDetails, setUserDetails] = useState({\n      fullName: '',\n      email: '',\n      role: '',\n      dateOfBirth: '',\n    });\n\n    useEffect(() => {\n      if (currentUser && currentUser.email) {\n        fetchUserProfile();\n      }\n    }, [currentUser]);\n\n    const fetchUserProfile = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/api/auth/user/profile/${currentUser.email}`, {\n          method: 'GET',\n          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        });\n        if (response.ok) {\n          const data = await response.json();\n          const formattedDateOfBirth = data.dateOfBirth\n            ? new Date(data.dateOfBirth).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })\n            : 'No Date of Birth Provided';\n          setUserDetails({\n            fullName: currentUser.fullName,\n            email: currentUser.email,\n            role: currentUser.role,\n            dateOfBirth: formattedDateOfBirth,\n          });\n        } else {\n          console.error('Failed to fetch user details.');\n        }\n      } catch (error) {\n        console.error('Error fetching user details:', error);\n      }\n    };\n\n    return (\n      <div className='admin-profile-card-container'>\n        <Card className='admin-profile-card'>\n          <Card.Body className='admin-profile-card-body'>\n            <PersonCircle size={90} className='admin-profile-icon mb-4' />\n            <Card.Title className='admin-profile-card-title'>Profile Details</Card.Title>\n            \n            <div className='admin-profile-details-container'>\n              <div className='admin-profile-details-left'>\n              <div className='admin-break'> \n                {renderProfileDetail('Name', userDetails.fullName)}\n                </div>\n                <div className='admin-break'> \n                {renderProfileDetail('Email', userDetails.email)}\n                </div>\n                <div className='admin-break'> \n                {renderProfileDetail('Role', userDetails.role)}\n                </div>\n                <div className='admin-break'> \n                {renderProfileDetail('Date of Birth', userDetails.dateOfBirth)}\n                </div>\n              </div>\n              <div className='admin-profile-details-right'>\n                <Link to='/adminsettings' className='admin-profile-edit-link'>\n                  <Button className='admin-profile-edit-button'>Edit Profile</Button>\n                </Link>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n\n    function renderProfileDetail(label, value) {\n      return (\n        <Card.Text className='admin-profile-card-text'>\n          {label}: <span className='admin-profile-card-info'>{value || 'Not provided'}</span>\n        </Card.Text>\n      );\n    }\n  };\n\n  export default ProfileAdminDisplayComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}