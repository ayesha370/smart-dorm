{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\final\\\\src\\\\Components\\\\ChitChatComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_IO_URL = 'http://localhost:3001';\nconst socket = io(SOCKET_IO_URL);\nconst ChitChatComponent = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [hoverSend, setHoverSend] = useState(false);\n  const [hoverClear, setHoverClear] = useState(false);\n  const connectSSE = () => {\n    const eventSource = new EventSource(`http://localhost:3001/api/events?email=${currentUser.email}`);\n    console.log(\"EventSource connected\");\n    eventSource.onmessage = event => {\n      var data = event.data;\n      console.log(\"SSE EVENT DATA: \", data);\n      let index = data.indexOf(\":\");\n      if (index > -1) {\n        let eventName = data.substring(0, index);\n        if (eventName === \"MSG\") {\n          let msg = JSON.parse(data.substring(index + 1));\n          //functional update to avoid stale state\n          console.log(\"Received new message: \", msg);\n          setMessages(prevMessages => [...prevMessages, msg]);\n        }\n      }\n    };\n    eventSource.onerror = error => {\n      console.error(\"EventSource failed:\", error);\n      eventSource.close();\n    };\n  };\n\n  // Function to fetch chat history\n  const fetchChatHistory = useCallback(() => {\n    if (currentUser && selectedUser) {\n      fetch(`http://localhost:3001/api/auth/chat-history?user1=${currentUser.email}&user2=${selectedUser.email}`).then(response => response.json()).then(data => setMessages(data)).catch(err => console.error('Error fetching chat history:', err));\n    }\n  }, [currentUser, selectedUser]);\n  useEffect(() => {\n    fetchChatHistory();\n  }, [fetchChatHistory]);\n  useEffect(() => {\n    fetch(`http://localhost:3001/api/auth/users/${currentUser.role === 'user' ? 'admin' : 'user'}`).then(response => response.json()).then(data => setUsers(data)).catch(err => console.error('Error fetching users:', err));\n  }, [currentUser.role]);\n\n  // SSE connection\n  useEffect(connectSSE, [currentUser]);\n  const sendMessage = () => {\n    if (currentUser && selectedUser && currentMessage.trim() !== '') {\n      const messageData = {\n        senderEmail: currentUser.email,\n        receiverEmail: selectedUser.email,\n        message: currentMessage,\n        timestamp: new Date()\n      };\n      socket.emit('sendMessage', messageData);\n      setMessages([...messages, messageData]);\n      setCurrentMessage('');\n    }\n  };\n  const clearChat = () => {\n    if (selectedUser) {\n      const confirmClear = window.confirm('Are you sure you want to clear the chat history?');\n      if (confirmClear) {\n        fetch(`http://localhost:3001/api/auth/clear-chat`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user1: currentUser.email,\n            user2: selectedUser.email\n          })\n        }).then(() => setMessages([])).catch(err => console.error('Error clearing chat:', err));\n      }\n    }\n  };\n  const refreshChat = () => {\n    fetchChatHistory();\n  };\n\n  // Component styling\n  // Component styling\n  const styles = {\n    chatContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      width: '75%',\n      // Reduce the width from 100% to 90%\n      height: '80vh',\n      // Set height to 80vh (no change needed here unless you want it different)\n      backgroundColor: '#f0f0f0',\n      border: '1px solid #ccc',\n      borderRadius: '10px',\n      marginLeft: '220px',\n      // Add margin to the left to push the entire container right\n      marginTop: '40px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.4)'\n    },\n    userContainer: {\n      width: '200px',\n      height: '96%',\n      overflowY: 'auto',\n      backgroundColor: '#fff',\n      padding: '10px',\n      marginRight: '10px',\n      borderRadius: '10px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.4)'\n    },\n    chatBox: {\n      flexGrow: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: '#fff',\n      borderRadius: '10px',\n      padding: '10px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.4)'\n    },\n    chatMessages: {\n      flexGrow: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      overflowY: 'auto'\n    },\n    inputBox: {\n      display: 'flex',\n      alignItems: 'center',\n      borderTop: '1px solid #ccc',\n      padding: '10px 0'\n    },\n    inputField: {\n      flexGrow: 1,\n      padding: '10px',\n      marginRight: '10px',\n      borderRadius: '4px',\n      border: '1px solid #ccc'\n    },\n    button: {\n      padding: '10px 20px',\n      borderRadius: '4px',\n      border: 'none',\n      cursor: 'pointer',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.3)'\n    },\n    sendButton: {\n      backgroundColor: hoverSend ? '#367fd4' : '#4e9af1',\n      // Darker blue when hovered\n      color: '#fff',\n      marginLeft: 'auto',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.3)'\n    },\n    clearButton: {\n      backgroundColor: hoverClear ? '#cc0000' : 'red',\n      // Darker red when hovered\n      color: '#fff',\n      marginLeft: '10px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.3)'\n    },\n    refreshButton: {\n      backgroundColor: '#4e9af1',\n      color: '#fff',\n      marginBottom: '10px'\n    },\n    messageBubble: isCurrentUser => ({\n      margin: '5px 0',\n      padding: '10px',\n      borderRadius: '10px',\n      backgroundColor: isCurrentUser ? '#4e9af1' : '#e9e9e9',\n      color: isCurrentUser ? '#fff' : '#333',\n      alignSelf: isCurrentUser ? 'flex-end' : 'flex-start',\n      maxWidth: '50%',\n      minWidth: '40%',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.3)'\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.userContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setSelectedUser(user),\n        style: {\n          padding: '10px',\n          cursor: 'pointer',\n          backgroundColor: selectedUser === user ? '#e4e4e4' : 'transparent',\n          borderRadius: '10px'\n        },\n        children: user.fullName\n      }, user.email, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatBox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.chatMessages,\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.messageBubble(msg.senderEmail === currentUser.email),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: msg.senderEmail === currentUser.email ? 'You' : msg.senderEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputBox,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currentMessage,\n          onChange: e => setCurrentMessage(e.target.value),\n          placeholder: \"Type your message here...\",\n          style: styles.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onMouseEnter: () => setHoverSend(true),\n          onMouseLeave: () => setHoverSend(false),\n          onClick: sendMessage,\n          style: {\n            ...styles.button,\n            ...styles.sendButton\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onMouseEnter: () => setHoverClear(true),\n          onMouseLeave: () => setHoverClear(false),\n          onClick: clearChat,\n          style: {\n            ...styles.button,\n            ...styles.clearButton\n          },\n          children: \"Clear Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(ChitChatComponent, \"Vr4YyOXHT5vpr1ieP+p/jnMkaE4=\", false, function () {\n  return [useAuth];\n});\n_c = ChitChatComponent;\nexport default ChitChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChitChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","useAuth","jsxDEV","_jsxDEV","SOCKET_IO_URL","socket","ChitChatComponent","_s","currentUser","currentMessage","setCurrentMessage","messages","setMessages","users","setUsers","selectedUser","setSelectedUser","hoverSend","setHoverSend","hoverClear","setHoverClear","connectSSE","eventSource","EventSource","email","console","log","onmessage","event","data","index","indexOf","eventName","substring","msg","JSON","parse","prevMessages","onerror","error","close","fetchChatHistory","fetch","then","response","json","catch","err","role","sendMessage","trim","messageData","senderEmail","receiverEmail","message","timestamp","Date","emit","clearChat","confirmClear","window","confirm","method","headers","body","stringify","user1","user2","refreshChat","styles","chatContainer","display","flexDirection","width","height","backgroundColor","border","borderRadius","marginLeft","marginTop","boxShadow","userContainer","overflowY","padding","marginRight","chatBox","flexGrow","chatMessages","inputBox","alignItems","borderTop","inputField","button","cursor","sendButton","color","clearButton","refreshButton","marginBottom","messageBubble","isCurrentUser","margin","alignSelf","maxWidth","minWidth","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","fullName","type","value","onChange","e","target","placeholder","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["E:/FYP/final/src/Components/ChitChatComponent.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport io from 'socket.io-client'\nimport { useAuth } from '../contexts/AuthContext'\n\nconst SOCKET_IO_URL = 'http://localhost:3001'\nconst socket = io(SOCKET_IO_URL)\n\nconst ChitChatComponent = () => {\n  const { currentUser } = useAuth()\n  const [currentMessage, setCurrentMessage] = useState('')\n  const [messages, setMessages] = useState([])\n  const [users, setUsers] = useState([])\n  const [selectedUser, setSelectedUser] = useState(null)\n  const [hoverSend, setHoverSend] = useState(false)\n  const [hoverClear, setHoverClear] = useState(false)\n\n  const connectSSE = () => {\n    const eventSource = new EventSource(\n      `http://localhost:3001/api/events?email=${currentUser.email}`\n    );\n    console.log(\"EventSource connected\");\n\n    eventSource.onmessage = (event) => {\n      var data = event.data\n      console.log(\"SSE EVENT DATA: \", data)\n      let index = data.indexOf(\":\")\n      if(index > -1) {\n        let eventName = data.substring(0, index)\n        if(eventName === \"MSG\") {\n          let msg = JSON.parse(data.substring(index + 1))\n          //functional update to avoid stale state\n          console.log(\"Received new message: \",msg);\n          setMessages((prevMessages) => [...prevMessages, msg]);\n        }\n      }\n    };\n\n    eventSource.onerror = (error) => {\n      console.error(\"EventSource failed:\", error);\n      eventSource.close();\n    };\n  };\n\n  // Function to fetch chat history\n  const fetchChatHistory = useCallback(() => {\n    if (currentUser && selectedUser) {\n      fetch(\n        `http://localhost:3001/api/auth/chat-history?user1=${currentUser.email}&user2=${selectedUser.email}`\n      )\n        .then((response) => response.json())\n        .then((data) => setMessages(data))\n        .catch((err) => console.error('Error fetching chat history:', err))\n    }\n  }, [currentUser, selectedUser])\n\n  useEffect(() => {\n    fetchChatHistory()\n  }, [fetchChatHistory])\n\n  useEffect(() => {\n    fetch(\n      `http://localhost:3001/api/auth/users/${\n        currentUser.role === 'user' ? 'admin' : 'user'\n      }`\n    )\n      .then((response) => response.json())\n      .then((data) => setUsers(data))\n      .catch((err) => console.error('Error fetching users:', err))\n  }, [currentUser.role])\n\n  \n  // SSE connection\n  useEffect(connectSSE, [currentUser]);\n\n\n  const sendMessage = () => {\n    if (currentUser && selectedUser && currentMessage.trim() !== '') {\n      const messageData = {\n        senderEmail: currentUser.email,\n        receiverEmail: selectedUser.email,\n        message: currentMessage,\n        timestamp: new Date(),\n      }\n      socket.emit('sendMessage', messageData)\n      setMessages([...messages, messageData])\n      setCurrentMessage('')\n    }\n  }\n\n  const clearChat = () => {\n    if (selectedUser) {\n      const confirmClear = window.confirm(\n        'Are you sure you want to clear the chat history?'\n      )\n      if (confirmClear) {\n        fetch(`http://localhost:3001/api/auth/clear-chat`, {\n          method: 'DELETE',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            user1: currentUser.email,\n            user2: selectedUser.email,\n          }),\n        })\n          .then(() => setMessages([]))\n          .catch((err) => console.error('Error clearing chat:', err))\n      }\n    }\n  }\n\n  const refreshChat = () => {\n    fetchChatHistory()\n  }\n\n  // Component styling\n  // Component styling\n  const styles = {\n    chatContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      width: '75%', // Reduce the width from 100% to 90%\n      height: '80vh', // Set height to 80vh (no change needed here unless you want it different)\n      backgroundColor: '#f0f0f0',\n      border: '1px solid #ccc',\n      borderRadius: '10px',\n      marginLeft: '220px', // Add margin to the left to push the entire container right\n      marginTop: '40px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.4)',\n    },\n    userContainer: {\n      width: '200px',\n      height: '96%',\n      overflowY: 'auto',\n      backgroundColor: '#fff',\n      padding: '10px',\n      marginRight: '10px',\n      borderRadius: '10px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.4)',\n    },\n    chatBox: {\n      flexGrow: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: '#fff',\n      borderRadius: '10px',\n      padding: '10px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.4)',\n    },\n    chatMessages: {\n      flexGrow: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      overflowY: 'auto',\n    },\n    inputBox: {\n      display: 'flex',\n      alignItems: 'center',\n      borderTop: '1px solid #ccc',\n      padding: '10px 0',\n    },\n    inputField: {\n      flexGrow: 1,\n      padding: '10px',\n      marginRight: '10px',\n      borderRadius: '4px',\n      border: '1px solid #ccc',\n    },\n    button: {\n      padding: '10px 20px',\n      borderRadius: '4px',\n      border: 'none',\n      cursor: 'pointer',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.3)',\n    },\n    sendButton: {\n      backgroundColor: hoverSend ? '#367fd4' : '#4e9af1', // Darker blue when hovered\n      color: '#fff',\n      marginLeft: 'auto',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.3)',\n    },\n    clearButton: {\n      backgroundColor: hoverClear ? '#cc0000' : 'red', // Darker red when hovered\n      color: '#fff',\n      marginLeft: '10px',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.3)',\n    },\n    refreshButton: {\n      backgroundColor: '#4e9af1',\n      color: '#fff',\n      marginBottom: '10px',\n    },\n    messageBubble: (isCurrentUser) => ({\n      margin: '5px 0',\n      padding: '10px',\n      borderRadius: '10px',\n      backgroundColor: isCurrentUser ? '#4e9af1' : '#e9e9e9',\n      color: isCurrentUser ? '#fff' : '#333',\n      alignSelf: isCurrentUser ? 'flex-end' : 'flex-start',\n      maxWidth: '50%',\n      minWidth: '40%',\n      boxShadow: '0 2px 4px rgba(0,0,0,0.3)',\n    }),\n  }\n\n  return (\n    <div style={styles.chatContainer}>\n      <div style={styles.userContainer}>\n        <h3>Available Users</h3>\n        {users.map((user) => (\n          <div\n            key={user.email}\n            onClick={() => setSelectedUser(user)}\n            style={{\n              padding: '10px',\n              cursor: 'pointer',\n              backgroundColor:\n                selectedUser === user ? '#e4e4e4' : 'transparent',\n              borderRadius: '10px',\n              \n            }}\n          >\n            {user.fullName}\n          </div>\n        ))}\n      </div>\n      <div style={styles.chatBox}>\n        {/* <button\n          onClick={refreshChat}\n          style={{ ...styles.button, ...styles.refreshButton }}\n        >\n          Refresh\n        </button> */}\n        <div style={styles.chatMessages}>\n          {messages.map((msg, index) => (\n            <div\n              key={index}\n              style={styles.messageBubble(\n                msg.senderEmail === currentUser.email\n              )}\n            >\n              <strong>\n                {msg.senderEmail === currentUser.email\n                  ? 'You'\n                  : msg.senderEmail}\n              </strong>\n              <p>{msg.message}</p>\n            </div>\n          ))}\n        </div>\n        <div style={styles.inputBox}>\n          <input\n            type='text'\n            value={currentMessage}\n            onChange={(e) => setCurrentMessage(e.target.value)}\n            placeholder='Type your message here...'\n            style={styles.inputField}\n          />\n          <button\n            onMouseEnter={() => setHoverSend(true)}\n            onMouseLeave={() => setHoverSend(false)}\n            onClick={sendMessage}\n            style={{ ...styles.button, ...styles.sendButton }}\n          >\n            Send\n          </button>\n          <button\n            onMouseEnter={() => setHoverClear(true)}\n            onMouseLeave={() => setHoverClear(false)}\n            onClick={clearChat}\n            style={{ ...styles.button, ...styles.clearButton }}\n          >\n            Clear Chat\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ChitChatComponent\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}