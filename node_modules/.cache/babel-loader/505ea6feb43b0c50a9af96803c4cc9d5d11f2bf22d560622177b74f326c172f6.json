{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\final\\\\src\\\\Components\\\\ResetPasswordComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordComponent({\n  resetId\n}) {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  console.log(resetId);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3001/api/auth/reset-password/${resetId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      if (response.status === 200) {\n        const data = await response.json();\n        setSuccessMessage('Password reset successful! Redirecting to login page...');\n        setTimeout(() => {\n          navigate('/login');\n        }, 3000); // Redirect after 3 seconds\n        //navigate('/profile'); // Adjust according to your routing\n      } else {\n        const data = await response.json();\n        setErrorMessage(data.message || 'Password reset failed');\n      }\n    } catch (error) {\n      setErrorMessage('Reset Password request failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          required: true,\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordComponent, \"YJ2pmnnKvXmpGj4apNQyfmS7gH0=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPasswordComponent;\nexport default ResetPasswordComponent;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordComponent\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ResetPasswordComponent","resetId","_s","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","navigate","console","log","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","status","data","json","setTimeout","message","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","value","onChange","e","target","_c","$RefreshReg$"],"sources":["E:/FYP/final/src/Components/ResetPasswordComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css';\n\nfunction ResetPasswordComponent({ resetId }) {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  \n  const navigate = useNavigate();\n  console.log(resetId);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:3001/api/auth/reset-password/${resetId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ password }),\n      });\n\n      if (response.status === 200) {\n        const data = await response.json();\n        setSuccessMessage('Password reset successful! Redirecting to login page...');\n        setTimeout(() => {\n            navigate('/login');\n            \n        }, 3000); // Redirect after 3 seconds\n        //navigate('/profile'); // Adjust according to your routing\n      } else {\n        const data = await response.json();\n        setErrorMessage(data.message || 'Password reset failed');\n        \n      }\n    } catch (error) {\n      setErrorMessage('Reset Password request failed');\n    }\n  };\n\n  return (\n    <div className=\"login-form-container\">\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <h2>Reset Password</h2>\n        {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n        {successMessage && <div className=\"success-message\">{successMessage}</div>}\n        {/* {errorMessage && <div className=\"error-message\">{errorMessage}</div>} */}\n        <div className=\"input-group\">\n          <input \n            type=\"password\" \n            placeholder=\"Password\" \n            required \n            value={password}\n            onChange={(e) => setPassword(e.target.value)} \n          />\n        </div>\n        <div className=\"input-group\">\n          <input \n            type=\"password\" \n            placeholder=\"Confirm Password\" \n            required \n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)} \n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">Reset Password</button>\n        \n      </form>\n    </div>\n  );\n}\n\nexport default ResetPasswordComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}