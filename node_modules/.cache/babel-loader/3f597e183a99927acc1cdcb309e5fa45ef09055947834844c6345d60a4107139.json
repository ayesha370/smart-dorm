{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\final\\\\src\\\\Components\\\\RoomAllocationAdminComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RoomAllocationAdminComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomAllocationAdminComponent = ({\n  allocationsProp = [],\n  fetchAllocations\n}) => {\n  _s();\n  const [allocations, setAllocations] = useState(allocationsProp);\n  const [selectedAllocations, setSelectedAllocations] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const allocationsPerPage = 10;\n  const indexOfLastAllocation = currentPage * allocationsPerPage;\n  const indexOfFirstAllocation = indexOfLastAllocation - allocationsPerPage;\n  const currentAllocations = allocations.slice(indexOfFirstAllocation, indexOfLastAllocation);\n  useEffect(() => {\n    console.log('Fetched Allocations:', allocationsProp);\n    setAllocations(allocationsProp);\n  }, [allocationsProp]);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const handleSelectAllocation = allocationId => {\n    setSelectedAllocations(prev => {\n      if (prev.includes(allocationId)) {\n        return prev.filter(id => id !== allocationId);\n      }\n      return [...prev, allocationId];\n    });\n  };\n  const handleAllocationAction = async action => {\n    for (const allocId of selectedAllocations) {\n      try {\n        const response = await fetch(`http://localhost:3001/api/auth/roomallocation/update/${allocId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            status: action\n          })\n        });\n        const result = await response.json();\n        if (result.updatedAllocation) {\n          await fetchAllocations(); // Refetch allocations after update\n        }\n      } catch (error) {\n        console.error('Error updating allocation status:', error);\n      }\n    }\n    setSelectedAllocations([]); // Reset selection\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-allocation-admin\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAllocationAction('accepted'),\n        disabled: selectedAllocations.length === 0,\n        className: \"confirm\",\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAllocationAction('rejected'),\n        disabled: selectedAllocations.length === 0,\n        className: \"cancel\",\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"room-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"room-checkbox\",\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Room Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Room Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Additional Requests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentAllocations.map(allocation => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedAllocations.includes(allocation._id),\n                onChange: () => handleSelectAllocation(allocation._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: allocation.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: allocation.fromDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: allocation.toDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: allocation.roomType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: allocation.roomNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: allocation.additionalRequest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: allocation.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, allocation._id /* Change to match your allocation object's unique ID */, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomAllocationAdminComponent, \"JjPCykz1hIYxU/gzZg+yNtK7Q84=\");\n_c = RoomAllocationAdminComponent;\nexport default RoomAllocationAdminComponent;\nvar _c;\n$RefreshReg$(_c, \"RoomAllocationAdminComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RoomAllocationAdminComponent","allocationsProp","fetchAllocations","_s","allocations","setAllocations","selectedAllocations","setSelectedAllocations","currentPage","setCurrentPage","allocationsPerPage","indexOfLastAllocation","indexOfFirstAllocation","currentAllocations","slice","console","log","paginate","pageNumber","handleSelectAllocation","allocationId","prev","includes","filter","id","handleAllocationAction","action","allocId","response","fetch","method","headers","body","JSON","stringify","status","result","json","updatedAllocation","error","className","children","onClick","disabled","length","fileName","_jsxFileName","lineNumber","columnNumber","map","allocation","type","checked","_id","onChange","email","fromDate","toDate","roomType","roomNumber","additionalRequest","_c","$RefreshReg$"],"sources":["E:/FYP/final/src/Components/RoomAllocationAdminComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './RoomAllocationAdminComponent.css'\n\nconst RoomAllocationAdminComponent = ({\n  allocationsProp = [],\n  fetchAllocations,\n}) => {\n  const [allocations, setAllocations] = useState(allocationsProp)\n  const [selectedAllocations, setSelectedAllocations] = useState([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const allocationsPerPage = 10\n\n  const indexOfLastAllocation = currentPage * allocationsPerPage\n  const indexOfFirstAllocation = indexOfLastAllocation - allocationsPerPage\n  const currentAllocations = allocations.slice(\n    indexOfFirstAllocation,\n    indexOfLastAllocation\n  )\n\n  useEffect(() => {\n    console.log('Fetched Allocations:', allocationsProp)\n    setAllocations(allocationsProp)\n  }, [allocationsProp])\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  const handleSelectAllocation = (allocationId) => {\n    setSelectedAllocations((prev) => {\n      if (prev.includes(allocationId)) {\n        return prev.filter((id) => id !== allocationId)\n      }\n      return [...prev, allocationId]\n    })\n  }\n\n  const handleAllocationAction = async (action) => {\n    for (const allocId of selectedAllocations) {\n      try {\n        const response = await fetch(\n          `http://localhost:3001/api/auth/roomallocation/update/${allocId}`,\n          {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ status: action }),\n          }\n        )\n        const result = await response.json()\n        if (result.updatedAllocation) {\n          await fetchAllocations() // Refetch allocations after update\n        }\n      } catch (error) {\n        console.error('Error updating allocation status:', error)\n      }\n    }\n\n    setSelectedAllocations([]) // Reset selection\n  }\n\n  return (\n    <div className='room-allocation-admin'>\n      <div className='room-controls'>\n        <button\n          onClick={() => handleAllocationAction('accepted')}\n          disabled={selectedAllocations.length === 0}\n          className='confirm'\n        >\n          Accept\n        </button>\n        <button\n          onClick={() => handleAllocationAction('rejected')}\n          disabled={selectedAllocations.length === 0}\n          className='cancel'\n        >\n          Reject\n        </button>\n      </div>\n      <div className='room-table-container'>\n        <table className='room-table'>\n          <thead>\n            <tr>\n              <th className='room-checkbox'>Select</th>\n              <th>Email</th>\n              <th>From Date</th>\n              <th>To Date</th>\n              <th>Room Type</th>\n              <th>Room Number</th>\n              <th>Additional Requests</th>\n              <th>Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currentAllocations.map((allocation) => (\n              <tr\n                key={\n                  allocation._id /* Change to match your allocation object's unique ID */\n                }\n              >\n                <td>\n                  <input\n                    type='checkbox'\n                    checked={selectedAllocations.includes(allocation._id)}\n                    onChange={() => handleSelectAllocation(allocation._id)}\n                  />\n                </td>\n                <td>{allocation.email}</td>\n                <td>{allocation.fromDate}</td>\n                <td>{allocation.toDate}</td>\n                <td>{allocation.roomType}</td>\n                <td>{allocation.roomNumber}</td>\n                <td>{allocation.additionalRequest}</td>\n                <td>{allocation.status}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n     \n    </div>\n  )\n}\n\nexport default RoomAllocationAdminComponent\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oCAAoC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,4BAA4B,GAAGA,CAAC;EACpCC,eAAe,GAAG,EAAE;EACpBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAACK,eAAe,CAAC;EAC/D,MAAM,CAACK,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMc,kBAAkB,GAAG,EAAE;EAE7B,MAAMC,qBAAqB,GAAGH,WAAW,GAAGE,kBAAkB;EAC9D,MAAME,sBAAsB,GAAGD,qBAAqB,GAAGD,kBAAkB;EACzE,MAAMG,kBAAkB,GAAGT,WAAW,CAACU,KAAK,CAC1CF,sBAAsB,EACtBD,qBACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdkB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEf,eAAe,CAAC;IACpDI,cAAc,CAACJ,eAAe,CAAC;EACjC,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMgB,QAAQ,GAAIC,UAAU,IAAKT,cAAc,CAACS,UAAU,CAAC;EAE3D,MAAMC,sBAAsB,GAAIC,YAAY,IAAK;IAC/Cb,sBAAsB,CAAEc,IAAI,IAAK;MAC/B,IAAIA,IAAI,CAACC,QAAQ,CAACF,YAAY,CAAC,EAAE;QAC/B,OAAOC,IAAI,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKJ,YAAY,CAAC;MACjD;MACA,OAAO,CAAC,GAAGC,IAAI,EAAED,YAAY,CAAC;IAChC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,sBAAsB,GAAG,MAAOC,MAAM,IAAK;IAC/C,KAAK,MAAMC,OAAO,IAAIrB,mBAAmB,EAAE;MACzC,IAAI;QACF,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CACzB,wDAAuDF,OAAQ,EAAC,EACjE;UACEG,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,MAAM,EAAET;UAAO,CAAC;QACzC,CACF,CAAC;QACD,MAAMU,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACpC,IAAID,MAAM,CAACE,iBAAiB,EAAE;UAC5B,MAAMpC,gBAAgB,CAAC,CAAC,EAAC;QAC3B;MACF,CAAC,CAAC,OAAOqC,KAAK,EAAE;QACdxB,OAAO,CAACwB,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF;IAEAhC,sBAAsB,CAAC,EAAE,CAAC,EAAC;EAC7B,CAAC;EAED,oBACER,OAAA;IAAKyC,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpC1C,OAAA;MAAKyC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B1C,OAAA;QACE2C,OAAO,EAAEA,CAAA,KAAMjB,sBAAsB,CAAC,UAAU,CAAE;QAClDkB,QAAQ,EAAErC,mBAAmB,CAACsC,MAAM,KAAK,CAAE;QAC3CJ,SAAS,EAAC,SAAS;QAAAC,QAAA,EACpB;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjD,OAAA;QACE2C,OAAO,EAAEA,CAAA,KAAMjB,sBAAsB,CAAC,UAAU,CAAE;QAClDkB,QAAQ,EAAErC,mBAAmB,CAACsC,MAAM,KAAK,CAAE;QAC3CJ,SAAS,EAAC,QAAQ;QAAAC,QAAA,EACnB;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNjD,OAAA;MAAKyC,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnC1C,OAAA;QAAOyC,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC3B1C,OAAA;UAAA0C,QAAA,eACE1C,OAAA;YAAA0C,QAAA,gBACE1C,OAAA;cAAIyC,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzCjD,OAAA;cAAA0C,QAAA,EAAI;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACdjD,OAAA;cAAA0C,QAAA,EAAI;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBjD,OAAA;cAAA0C,QAAA,EAAI;YAAO;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBjD,OAAA;cAAA0C,QAAA,EAAI;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBjD,OAAA;cAAA0C,QAAA,EAAI;YAAW;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBjD,OAAA;cAAA0C,QAAA,EAAI;YAAmB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5BjD,OAAA;cAAA0C,QAAA,EAAI;YAAM;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRjD,OAAA;UAAA0C,QAAA,EACG5B,kBAAkB,CAACoC,GAAG,CAAEC,UAAU,iBACjCnD,OAAA;YAAA0C,QAAA,gBAKE1C,OAAA;cAAA0C,QAAA,eACE1C,OAAA;gBACEoD,IAAI,EAAC,UAAU;gBACfC,OAAO,EAAE9C,mBAAmB,CAACgB,QAAQ,CAAC4B,UAAU,CAACG,GAAG,CAAE;gBACtDC,QAAQ,EAAEA,CAAA,KAAMnC,sBAAsB,CAAC+B,UAAU,CAACG,GAAG;cAAE;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACLjD,OAAA;cAAA0C,QAAA,EAAKS,UAAU,CAACK;YAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BjD,OAAA;cAAA0C,QAAA,EAAKS,UAAU,CAACM;YAAQ;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9BjD,OAAA;cAAA0C,QAAA,EAAKS,UAAU,CAACO;YAAM;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5BjD,OAAA;cAAA0C,QAAA,EAAKS,UAAU,CAACQ;YAAQ;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9BjD,OAAA;cAAA0C,QAAA,EAAKS,UAAU,CAACS;YAAU;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChCjD,OAAA;cAAA0C,QAAA,EAAKS,UAAU,CAACU;YAAiB;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvCjD,OAAA;cAAA0C,QAAA,EAAKS,UAAU,CAACf;YAAM;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAhB1BE,UAAU,CAACG,GAAG,CAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBf,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAA7C,EAAA,CApHKH,4BAA4B;AAAA6D,EAAA,GAA5B7D,4BAA4B;AAsHlC,eAAeA,4BAA4B;AAAA,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}